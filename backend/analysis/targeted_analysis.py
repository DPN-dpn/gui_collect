from pathlib import Path


_filepath      = Path('include', 'auto_generated.ini')

def get_status():
    exists = _filepath.exists()
    enabled = False
    if exists:
        text = _filepath.read_text()
        enabled = len(text) > 0
    return exists, enabled

def clear(terminal=None):
    _filepath      .write_text('', encoding='utf-8')

    if terminal:
        terminal.print(f'Cleared targeted ini content from <PATH>{_filepath.absolute()}</PATH>')
        terminal.print()

def generate(export_name, model_hashes, component_names, d3dx_path: Path, terminal):
    targeted_content = '\n\n'.join([
        '\n'.join([
            '[TextureOverrideModel{}]'.format(i+1),
            'hash = {}'               .format(model_hash),
            '$model_{} = 1'           .format(i+1),
            'match_priority = 0',
            'filter_index = 70111102111',
            'run = CommandListRT',
            'run = CommandListModel',
            'run = CommandListTexture',
        ])
        for i, model_hash in enumerate(model_hashes)
    ])

    text_print_content = (
        f'[ResourceText.Model]\ntype = Buffer\ndata = "Targeted Analysis: {export_name}"\n\n'
        +'[ResourcePosParams.Model]\ntype = StructuredBuffer\narray = 1\ndata = R32_FLOAT  -0.99 -0.00 +1.00 +1.00  0.005 0.005  1 2  0\n\n'
        +'[CommandListPrintModel]\n'
        +'Resource\\gui_collect\\internal\\Text = ResourceText.Model\n'
        +'Resource\\gui_collect\\internal\\TextPosParams = ResourcePosParams.Model\n'
        +'Resource\\gui_collect\\internal\\TextParams = ResourceColorParams.White\n'
        +'run = CommandList\\gui_collect\\internal\\PrintText\n'
        +'\n'
        +'\n'.join([
            f'[ResourceText.Model{i+1}]\ntype = Buffer\ndata = "- {model_hash}  ({component_name})"\n'
            for i, (model_hash, component_name) in enumerate(zip(model_hashes, component_names))
        ])
        +'\n'
        +'\n'.join([
            f'[ResourcePosParams.Model{i+1}]\ntype = StructuredBuffer\narray = 1\ndata = R32_FLOAT  -0.99 {-0.0785*(i+1)} +1.00 +1.00  0.005 0.005  1 2  0\n'
            for i in range(len(model_hashes))
        ])
        +'\n'
        +'\n'.join([
            '\n'.join([
                f'[CommandListPrintModel{i+1}]',
                f'Resource\\gui_collect\\internal\\TextPosParams = ResourcePosParams.Model{i+1}',
                f'Resource\\gui_collect\\internal\\Text = ResourceText.Model{i+1}',
                f'if $model_{i+1}',
                f'    if !$costume_mods',
                f'        Resource\\gui_collect\\internal\\TextParams = ResourceColorParams.Green',
                f'    else',
                f'        Resource\\gui_collect\\internal\\TextParams = ResourceColorParams.YellowGreen',
                f'    endif',
                f'else',
                f'    Resource\\gui_collect\\internal\\TextParams = ResourceColorParams.Red',
                f'endif',
                f'run = CommandList\\gui_collect\\internal\\PrintText',
                f''
            ])
            for i in range(len(model_hashes))
        ])
        +'\n'
        +'[Constants]\n'
        +''.join([f'global $model_{i+1} = 0\n' for i in range(len(model_hashes))])
        +'\n'
        +'[Present]\n'
        +'run = CommandListPrintModel\n'
        +''.join([f'post $model_{i+1} = 0\n'            for i in range(len(model_hashes))])
        +''.join([f'run = CommandListPrintModel{i+1}\n' for i in range(len(model_hashes))])
    )

    with open(_filepath, 'w') as f:
        f.write(TARGETED)
        f.write(targeted_content)
        f.write('\n\n')
        f.write(TEXT_PRINT)
        f.write(text_print_content)
        f.write('\n\n')
        f.write(';-------------FILE END--------------\n')


    terminal.print(f'Wrote targeted ini content to <PATH>{_filepath.absolute()}</PATH>')
    if d3dx_path:
        relative_path = _filepath.absolute().relative_to(d3dx_path, walk_up=True)
        terminal.print(f'Its relative path to <PATH>{d3dx_path.absolute()}</PATH> is <PATH>{relative_path}</PATH>')
        terminal.print()

TARGETED = '''
; AUTOGENERATED: DO NOT MANUALLY EDIT

[Includes]
include = ./Internal.ini

[Rendering]
dump_usage = 1

[Hunting]
hunting = 1
analyse_options = stereo

[ShaderRegexEnableTargetedTextureOverrides]
shader_model = vs_4_0 vs_4_1 vs_5_0 vs_5_1
if !$costume_mods
    if ib == 70111102111
        checktextureoverride = ib
    endif
endif

;----------TARGET SHADERS-----------
[ShaderOverridePose]
; GI+HI Pose Shader One
hash = 653c63ba4a73ca8b
allow_duplicate_hash = overrule
analyse_options = dump_vb txt buf

[ShaderOverridePose1]
; ZZZ+SR Pose Shader One
hash = e8425f64cfb887cd
allow_duplicate_hash = overrule
analyse_options = dump_vb txt buf

[ShaderOverridePose2]
; ZZZ+SR Pose Shader Two
hash = a0b21a8e787c5a98
allow_duplicate_hash = overrule
analyse_options = dump_vb txt buf

[ShaderOverridePose3]
; ZZZ+SR Pose Shader Three
hash = 9684c4091fc9e35a
allow_duplicate_hash = overrule
analyse_options = dump_vb txt buf

[ShaderOverrideShapekey]
; ZZZ+SR ShapeKey Compute Shader
hash = 743108cc03f39cbf
allow_duplicate_hash = overrule
analyse_options = dump_rt dump_tex dump_cb buf txt

;----------PRESET COMMANDS----------
[CommandListModel]
analyse_options = dump_ib dump_vb txt buf

[CommandListRT]
analyse_options = dump_rt jps_dds

[CommandListTexture]
analyse_options = dump_tex

;------------TARGET MODEL----------
'''

TEXT_PRINT = '''
;-------------TEXT PRINT------------
[ResourceColorParams.White]
type = StructuredBuffer
array = 1
data = R32_FLOAT 1 1.00 1.00 1   0 0 0 0.8   1.0

[ResourceColorParams.Green]
type = StructuredBuffer
array = 1
data = R32_FLOAT 0 1.00 0.00 1   0 0 0 0.8   1.0

[ResourceColorParams.Red]
type = StructuredBuffer
array = 1
data = R32_FLOAT 1.00 0 0.00 1   0 0 0 0.8   1.0

[ResourceColorParams.YellowGreen]
type = StructuredBuffer
array = 1
data = R32_FLOAT 0.80 1 0.00 1   0 0 0 0.8   1.0
'''
